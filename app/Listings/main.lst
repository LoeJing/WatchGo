C51 COMPILER V9.56.0.0   MAIN                                                              04/23/2018 11:39:58 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN \\192.168.2.201\Users\zhongzuan\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Lib;..\Lib
                    -\inc;..\Lib\src;..\sourses) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(\\192.168.2.201\Users\zhongzuan
                    -\main.obj)

line level    source

   1          #include "common.h"
   2          #include "oled.h"
   3          
   4          #include "Display.h"
   5          #include "Timer.h"
   6          #include "Uart.h"
   7          #include "MAX30100.h"
   8          #include "MSTP.h"
   9          
  10          #define refreashDisplay()  preHourH=Hour/10;preMinuteH=Minute/10; displayHoursH(preHourH);displayHoursL(Ho
             -ur%10);displayMinuteH(preMinuteH);displayMinuteL(Minute%10);\
  11                        displayIcon_Battery(2,0xff);displayIcon_Bluetooth(0x00)
  12          
  13          
  14          #define DEBUG
  15          //#include "Power.h"
  16          
  17          unsigned char xdata SMode=0;
  18          
  19          enum FucState
  20          {
  21            TimeMode=1,
  22            HeartRateMode,
  23            StepMode
  24          };
  25          
  26          void main()
  27          {
  28   1        pack tmpPack;
  29   1        unsigned char tmpCnt[6]=0;
  30   1        unsigned char ID=0 ;
  31   1      
  32   1        P_SW2=0xb0;
  33   1        I2CCFG=0xe0;
  34   1        I2CMSST=0x00;
  35   1      
  36   1        // MAX30100_startTemperatureSampling();
  37   1        
  38   1        //  powerInit();
  39   1      
  40   1        //Timer0Init();
  41   1        SMode=TimeMode;
  42   1      
  43   1        // MAX30100_writeRegister(0x06,0x0b);
  44   1        // MAX30100_writeRegister(0x01,0xf0);
  45   1        // MAX30100_writeRegister(0x09,0x33);
  46   1      
  47   1        
  48   1        Uart2Init();
  49   1        Timer0Init();
  50   1      
  51   1        MAX30100_Init();
  52   1        shutdown();
C51 COMPILER V9.56.0.0   MAIN                                                              04/23/2018 11:39:58 PAGE 2   

  53   1        OLED_Init();
  54   1      
  55   1        displayHoursH(0);
  56   1        displayColon(0xff);
  57   1        displayMinuteH(0);
  58   1        displayIcon_Battery(2,0xff);
  59   1        displayIcon_Bluetooth(0x00);
  60   1      
  61   1        Uart2_SendStr("Started!\n");
  62   1        
  63   1      
  64   1      
  65   1      
  66   1        while(1)
  67   1        {
  68   2      
  69   2      
  70   2          while(SMode==TimeMode)
  71   2          {
  72   3            // if(Rptr!=Wptr)
  73   3            // {
  74   3            //  Uart2SendChar(buffer[Rptr++]);
  75   3            //  Rptr&=0x09;
  76   3            // }
  77   3            
  78   3      
  79   3            if(bDataComplete)
  80   3            {
  81   4              bDataComplete=0;
  82   4      
  83   4              if(CheckPack(buffer))   //CheckPack(buffer)
  84   4              {
  85   5                #ifdef DEBUG
  86   5                sendPack(&buffer[0]);
  87   5                #endif
  88   5                switch(buffer[0])
  89   5                {
  90   6                  case 0x00 : switch(buffer[2])
  91   6                          {
  92   7                            case 0x02:  resume(); SMode=HeartRateMode;displayHRmodeIcon();
  93   7                                  MAX30100_writeRegister(0x06,0x0b);
  94   7                                  MAX30100_writeRegister(0x01,0xf0);
  95   7                                  MAX30100_writeRegister(0x09,0x33);
  96   7                                   break;
  97   7                            case 0x03:  Hour=buffer[3]; Minute=buffer[4];Second=buffer[5];
  98   7                                  refreashDisplay();
  99   7                                  break;
 100   7                            
 101   7                            default : break;
 102   7                          } break;
 103   6                  case 0x01 : switch(buffer[2])
 104   6                        {
 105   7                          case 0x02 : break;
 106   7                          default : break;
 107   7                        }break;
 108   6                  default : break;
 109   6                }
 110   5                clearBuffer(&buffer[0]);
 111   5      
 112   5              }
 113   4      
 114   4      
C51 COMPILER V9.56.0.0   MAIN                                                              04/23/2018 11:39:58 PAGE 3   

 115   4            }
 116   3              
 117   3            if(isSecondChange)
 118   3            {
 119   4              displayColon(0x00);
 120   4            
 121   4              isSecondChange=0;
 122   4            }
 123   3      
 124   3            if(TickCount==25) displayColon(0xff);
 125   3      
 126   3            if(isMinuteChange)
 127   3            {
 128   4              displayMinuteL(Minute%10);
 129   4              if((Minute/10)!=preMinuteH)
 130   4              { 
 131   5                preMinuteH=Minute/10;
 132   5                displayMinuteH(preMinuteH);
 133   5                
 134   5              }
 135   4              isMinuteChange=0;
 136   4      
 137   4            }
 138   3            if(isHourChange)
 139   3            {
 140   4              displayHoursL(Hour%10);
 141   4              if((Hour/10)!=preHourH) 
 142   4              {
 143   5                preHourH=Hour/10;
 144   5                displayHoursH(preHourH);
 145   5              }
 146   4              isHourChange=0;
 147   4            }
 148   3      
 149   3      
 150   3          
 151   3        //  getBatteryState();
 152   3        //  displayIcon_Battery(4,0xff);
 153   3          
 154   3        
 155   3          }
 156   2      
 157   2          while(SMode==HeartRateMode)
 158   2          {
 159   3            
 160   3            if(bDataComplete)
 161   3            {
 162   4              bDataComplete=0;
 163   4              if(CheckPack(buffer))
 164   4              {
 165   5                switch(buffer[0])
 166   5                {
 167   6                  case 0x00 : switch(buffer[2])
 168   6                          {
 169   7                            case 0x02:  shutdown(); SMode=TimeMode;OLED_Clear(); 
 170   7                                  refreashDisplay();
 171   7                            
 172   7                                  break;
 173   7                            case 0x03:  
 174   7                                  tmpCnt[0]=MAX30100_getPartID();
 175   7                                  tmpPack.type=0x01;tmpPack.cmd=0x03;tmpPack.cnt=tmpCnt;tmpPack.length=1;
 176   7                                  doPack(tmpPack,buffer);
C51 COMPILER V9.56.0.0   MAIN                                                              04/23/2018 11:39:58 PAGE 4   

 177   7                                  sendPack(buffer);
 178   7                                  break;
 179   7                            
 180   7                            default : break;
 181   7                          } break;
 182   6                  case 0x01 : switch(buffer[2])
 183   6                        {
 184   7                          case 0x02 : break;
 185   7                          default : break;
 186   7                        }break;
 187   6                  default : break;
 188   6                }
 189   5                clearBuffer(&buffer[0]);
 190   5      
 191   5              }
 192   4      
 193   4      
 194   4            }
 195   3          
 196   3      
 197   3            
 198   3          }
 199   2          while(SMode==StepMode)
 200   2          {
 201   3      
 202   3      
 203   3          }
 204   2      
 205   2      
 206   2        }
 207   1      
 208   1      
 209   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    810    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
