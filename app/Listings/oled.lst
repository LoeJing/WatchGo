C51 COMPILER V9.56.0.0   OLED                                                              04/05/2018 22:00:26 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Lib\src\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..
                    -\Lib;..\Lib\inc;..\Lib\src;..\sourses) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          
   3          void OLED_WR_Byte(unsigned char Data,bit CD) 
   4          {
   5   1          if(CD)
   6   1          {
   7   2              IIC_Start();
   8   2              IIC_WR_Byte(0x78);      //D/C#=0; R/W#=0
   9   2              SCL=1;
  10   2              SCL=0;
  11   2              IIC_WR_Byte(0x40);      //write data
  12   2              SCL=1;
  13   2              SCL=0;
  14   2              IIC_WR_Byte(Data);
  15   2              SCL=1;
  16   2              SCL=0;
  17   2              IIC_Stop();
  18   2          }
  19   1          else
  20   1          {
  21   2              IIC_Start();
  22   2              IIC_WR_Byte(0x78); //salave address SA0=0
  23   2              SCL=1;
  24   2              SCL=0;
  25   2              IIC_WR_Byte(0x00);
  26   2              SCL=1;
  27   2              SCL=0;
  28   2              IIC_WR_Byte(Data);
  29   2              SCL=1;
  30   2              SCL=0;
  31   2              IIC_Stop();
  32   2          }
  33   1      
  34   1      }
  35          
  36          void OLED_Set_Pos(unsigned char x,unsigned char y)
  37          {
  38   1          OLED_WR_Byte(0xb0+y,OLED_CMD);
  39   1          OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  40   1          OLED_WR_Byte((x&0x0f),OLED_CMD);
  41   1      }
  42          
  43          void OLED_Display_ON()
  44          {
  45   1          OLED_WR_Byte(0x8d,OLED_CMD);
  46   1          OLED_WR_Byte(0x14,OLED_CMD);
  47   1          OLED_WR_Byte(0xaf,OLED_CMD);
  48   1      }
  49          
  50          void OLED_Display_OFF()
  51          {
  52   1          OLED_WR_Byte(0x80,OLED_CMD);
  53   1          OLED_WR_Byte(0x10,OLED_CMD);
  54   1          OLED_WR_Byte(0xae,OLED_CMD);
C51 COMPILER V9.56.0.0   OLED                                                              04/05/2018 22:00:26 PAGE 2   

  55   1      }
  56          
  57          //void OLED_Clear()
  58          //{
  59          //    unsigned char i,n;
  60          //    for(i=0;i<8;i++)  
  61          //  {  
  62          //    OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  63          //    OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  64          //    OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  65          //    for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  66          //  }
  67          //}
  68          void OLED_Clear()
  69          {
  70   1          unsigned char i,n;
  71   1          for(i=0;i<128;i++)  
  72   1        {  
  73   2      //    OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  74   2      //    OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  75   2      //    OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  76   2          for(n=0;n<8;n++)OLED_WR_Byte(0,OLED_DATA); 
  77   2        }
  78   1      }
  79          //初始化SSD1306             
  80          void OLED_Init(void)
  81          {   
  82   1          Delayms(100);
  83   1          OLED_WR_Byte(0xAE,OLED_CMD);//关闭显示
  84   1        
  85   1        OLED_WR_Byte(0x40,OLED_CMD);//---set low column address
  86   1        OLED_WR_Byte(0xB0,OLED_CMD);//---set high column address
  87   1      
  88   1        OLED_WR_Byte(0xC8,OLED_CMD);//-not offset
  89   1      
  90   1        OLED_WR_Byte(0x81,OLED_CMD);//设置对比度
  91   1        OLED_WR_Byte(0xff,OLED_CMD);
  92   1      
  93   1        OLED_WR_Byte(0xa1,OLED_CMD);//段重定向设置
  94   1      
  95   1        OLED_WR_Byte(0xa6,OLED_CMD);//
  96   1        
  97   1        OLED_WR_Byte(0xa8,OLED_CMD);//设置驱动路数
  98   1        OLED_WR_Byte(0x1f,OLED_CMD);
  99   1        
 100   1        OLED_WR_Byte(0xd3,OLED_CMD);
 101   1        OLED_WR_Byte(0x00,OLED_CMD);
 102   1        
 103   1        OLED_WR_Byte(0xd5,OLED_CMD);
 104   1        OLED_WR_Byte(0xf0,OLED_CMD);
 105   1        
 106   1        OLED_WR_Byte(0xd9,OLED_CMD);
 107   1        OLED_WR_Byte(0x22,OLED_CMD);
 108   1        
 109   1        OLED_WR_Byte(0xda,OLED_CMD);
 110   1        OLED_WR_Byte(0x02,OLED_CMD);
 111   1        
 112   1        OLED_WR_Byte(0xdb,OLED_CMD);
 113   1        OLED_WR_Byte(0x49,OLED_CMD);
 114   1        
 115   1        OLED_WR_Byte(0x8d,OLED_CMD);
 116   1        OLED_WR_Byte(0x14,OLED_CMD);
C51 COMPILER V9.56.0.0   OLED                                                              04/05/2018 22:00:26 PAGE 3   

 117   1        
 118   1        OLED_WR_Byte(0x20,OLED_CMD);//
 119   1        OLED_WR_Byte(0x21,OLED_CMD);
 120   1        
 121   1        OLED_WR_Byte(0xaf,OLED_CMD);
 122   1        OLED_Clear();
 123   1      }  
 124          
 125          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char* BMP
             -)
 126          {   
 127   1       unsigned int j=0;
 128   1       unsigned char x,y;
 129   1        
 130   1        if(y1%8==0) y=y1/8;      
 131   1        else y=y1/8+1;
 132   1        for(y=y0;y<y1;y++)
 133   1        {
 134   2          OLED_Set_Pos(x0,y);
 135   2          for(x=x0;x<x1;x++)
 136   2            {      
 137   3              OLED_WR_Byte(*BMP,OLED_DATA);
 138   3              BMP++;
 139   3            }
 140   2        }
 141   1      } 
 142          //void OLED_Draw(unsigned char x,unsigned char y,unsigned int Length,unsigned int width,unsigned char* BMP
             -)
 143          //{
 144          //  unsigned int i,h;
 145          //  //OLED_Set_Pos(x,y);
 146          //  for(i=0;i<width;i++)
 147          //  {
 148          //    OLED_Set_Pos(x,y+i);
 149          //    for(h=0;h<Length;h++)
 150          //    {
 151          //      OLED_WR_Byte(*BMP,OLED_DATA);
 152          //      BMP++;
 153          //    }
 154          //    
 155          //  }
 156          //}
 157          void OLED_Draw(unsigned char x,unsigned char y,unsigned int Length,unsigned int width,unsigned char* BMP)
 158          {
 159   1        unsigned int i,h;
 160   1        //OLED_Set_Pos(x,y);
 161   1        for(i=0;i<Length;i++)
 162   1        {
 163   2          OLED_Set_Pos(x+i,y);
 164   2          for(h=0;h<width;h++)
 165   2          {
 166   3            OLED_WR_Byte(*BMP,OLED_DATA);
 167   3            BMP++;
 168   3          }
 169   2          
 170   2        }
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    538    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.56.0.0   OLED                                                              04/05/2018 22:00:26 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
